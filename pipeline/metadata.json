{
  "name": "pipeline",
  "description": "Installs/Configures a Jenkins based chef delivery pipeline",
  "long_description": "pipeline cookbook\n=================\nContinuous delivery pipeline for Chef.\n\n### Overview\n\nAs you commit Chef artifacts to git (i.e. cookbooks, data bags, environments and roles) the pipeline will test and load them into Chef automatically.\n\nThe pipeline is Jenkins based and relies on a git repository of your Chef items of the following structure:\n\n    chef_repo/Berksfile\n    chef_repo/environments/\n    chef_repo/roles/\n    chef_repo/data_bags/\n\n\n#### Description\n\n- **Berksfile:** \n  - Contains all the cookbooks in your project.\n  - Used to generate cookbook jobs for cookbooks that need testing\n  - Used to upload community cookbooks that don't need testing\n  - assumes there is a 'community' or external group of cookbooks you want to deliver to the Chef server\n- **environments/:** Directory of environment files in a format accepted by `knife upload`\n- **roles/:** Directory of role files in a format accepted by `knife upload`\n- **data_bags_/:** Directory of data bag files in a format accepted by `knife upload`\n\n### Jobs\n\nBoth of the following job types listen on their respective repositories and upload to Chef when changes are committed to git.\n\nOnce the pipeline is up and fully flushed out you will have N+1 cookbooks in your Jenkins dashboard, where N is the number of cookbooks you have that require testing.  And the +1 is the chef\\_repo job which is responsible for uploading all the roles, environments and data bags as well as cookbooks that bypass testing.\n\n#### Chef Repo Job\n- Uploads roles, environments, data bags and community cookbooks from the git repo to the Chef server\n\n#### Cookbook Jobs\n- Lint and test the respective cookbook\n- Upload respective cookbook from git to the Chef server\n\n## Instructions\n\nNote that there is a dependency between the chef-client and a Jenkins job.  The cookbook jobs are generated by the chef-client from the chef\\_repo that is kept up to date by Jenkins.  Because of this the chef-client will need to run twice on initial set up of the pipeline server to flush out all of the cookbook jobs.  \n\n### Try it!\nFrom the command line, run the following twice:\n\n`kitchen converge centos-7`\n\nNow check out your local CD pipeline demo on http://localhost:9090\n\n### Example Berksfile\n\nfrom [https://github.com/stephenlauck/pipeline-example-chef-repo/blob/master/Berksfile](https://github.com/stephenlauck/pipeline-example-chef-repo/blob/master/Berksfile)\n\n```\nsource \"https://supermarket.chef.io\"\n\ngroup :community do\n  cookbook 'jenkins'\n  cookbook 'java'\n  cookbook 'apt'\n  cookbook 'yum'\n  cookbook 'emacs'\n  cookbook 'git'\n  cookbook 'chef-zero'\n  cookbook 'chef-dk'\nend\n\ncookbook 'pipeline', git: 'https://github.com/chef-solutions/pipeline.git'\ncookbook 'gitlab', git: 'https://github.com/chef-solutions/gitlab.git'\n\n```\n\n### Production Notes\n\nUpdate the following to a chef\\_repo of your own:\n\n`default['pipeline']['chef-repo']['url'] = \"https://github.com/stephenlauck/pipeline_chef.git\"`\n\n\n- There is a .chef folder in the jenkins user's home. You will need to put an appropriate .pem file in there for a pipeline user with admin rights to Chef.\n- This uses the Chef embedded version of Ruby for knife and Berkshelf etc.\n- Since this uses Berkshelf for cookbook uploads, all cookbook versions are frozen by default.  Failure to update the metadata version number should result in a failed job.\n- Since this uses Berkshelf to upload your cookbooks to Chef, there is an expectation that every cookbook to be tested contain the usual Berkshelf workflow tools such as kitchen, vagrant and berks.\n\n\n### Platform\n\n* Ubuntu 12.04\n* CentOS 6.5\n\n\n\nAuthors\n-----------------\n- Author: Stephen Lauck (<lauck@getchef.com>)\n- Author: Mauricio Silva (<mauricio.silva@gmail.com>)\n- Contributor: Kennon Kwok <kennon@getchef.com>\n- Contributor: Kirt Fitzpatrick <kfitzpatrick@getchef.com>\n",
  "maintainer": "Stephen Lauck",
  "maintainer_email": "lauck@getchef.com",
  "license": "All rights reserved",
  "platforms": {

  },
  "dependencies": {
    "apt": ">= 0.0.0",
    "yum": ">= 0.0.0",
    "git": ">= 0.0.0",
    "java": ">= 0.0.0",
    "jenkins": ">= 0.0.0",
    "chef-zero": ">= 0.0.0",
    "emacs": ">= 0.0.0",
    "sudo": ">= 0.0.0",
    "chef-dk": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "2.3.0",
  "source_url": "",
  "issues_url": ""
}
